{{Domain*}}<!-- Domain: #{{js:this.name;/}} -->
{{Entity*}}{{Options}} {"saveAs": ["appViews", "'app'+this.name+'.hbs'"] } {{/Options}}
<script src="/app/{{js:this.getParent_Domain().name/}}_WebAPI.js"></script>
<script src="/app/appUtilities.js"></script>
<script>
    $(document).ready(function () {
        $active.entityTables = {};
        function initViews () {
            $active.initCalls.forEach(function (fct) {
                fct.call();
            });
            $active.initialized = true;
        }
        {{if}}this.isRootInstance{{then}}
        var pathSegments = window.location.pathname.split("/");
        var domain = pathSegments[pathSegments.length-1];
        get{{js:this.getParent_Domain().name;/}}Admin().getRootInstance (domain, function (rootInstance) {
            $active.oid = rootInstance.id;
            initViews();
        });
        {{else}}
        var oid = HeadStart_getURLParam("oid");
        if (oid) {
            $active.oid = oid;
            $active.mode = "edit";
            get{{js:this.getDomain().name;/}}Admin().getEntityByID("{{js:this.getParent_Domain().name;/}}", "{{js:this.name;/}}", oid, function(entity) {
                // Set active entity for this page (i.e. the "toplevel" entity):
                $active.entity=entity;

                // And now initialize all views (call all function which have been registered via "whenReady()")
                console.log("Initializing views...");
                initViews();
            });
        }
        else {
            var parentID = HeadStart_getURLParam("parentID");
            var relnID   = HeadStart_getURLParam("relnID");
            var relnName = HeadStart_getURLParam("relnName");
            if (!parentID || !relnID) alert ("URL must contain valid oid OR parentID+relnID!");
            else {
                $active.parentID=parentID;
                $active.relnID=relnID;
                $active.relnName=relnName;
                $active.mode = "create";
            }
        }
        {{/if}}
    });
</script>
<div class="container" role="main">
    <div class="row">
        <div class="col-sm-12">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="./{{js: this.getParent_Domain().name/}}">{{js: this.getParent_Domain().name/}}</a></li>
            </ol>
            {{> app{{js:this.name;/}}_DefaultPageView }}
        </div>
    </div>
</div>
{{/Entity}}
{{Entity*}}
<!-- Views for Entity: {{js:this.name;/}} -->
{{PageView*}}{{Options}} {"saveAs": ["appViews", "'app'+this.getParent_Entity().name+'_'+this.name+'.hbs'"] } {{/Options}}
<div class="panel panel-success">
    <div class="panel-heading"><b>{{js:this.getParent_Entity().name;/}}</b>
    </div>
    <div class="panel-body" id="{{js:this.name;/}}PB">
        <ul class="nav nav-tabs">
        {{Panel*}}
            <li {{js: this.itemIsFirst?'class="active"':''; /}}><a data-toggle="tab" href="#{{js:this.name;/}}Tab">{{js:this.label;/}}</a></li>
        {{/Panel}}
        </ul>
        <div class="tab-content">
            {{Panel*}}
            <div id="{{js:this.name;/}}Tab" class="tab-pane {{js: this.itemIsFirst?'fade in active':'fade'; /}}">
                <div class="panel-body">
                    {{BasicPropertyPanelItem?}}
                        <!--Body: {{js:this.name;/}}-->
                        <form class="form-horizontal">
                            {{BasicPropertyPanelItem*}}
                                <div class="form-group">
                                    <label for="{{js:this.name;/}}Input" class="col-sm-2 control-label">{{js:this.label;/}}
                                    </label>
                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="{{js:this.name;/}}Input">
                                    </div>
                                </div>
                            {{/BasicPropertyPanelItem}}
                        </form>
                        <script>
                            function {{js:this.getDomain().name;/}}_{{js:this.getParent_PageView().getParent_Entity().name;/}}_entity2{{js:this.name;/}} (entity) {{{BasicPropertyPanelItem*}}
                                $("#{{js:this.name;/}}Input").val(entity.get_{{js:this.name;/}}());{{/BasicPropertyPanelItem}}
                            }
                            function {{js:this.getDomain().name;/}}_{{js:this.getParent_PageView().getParent_Entity().name;/}}_{{js:this.name;/}}2entity (entity) {{{BasicPropertyPanelItem*}}
                                entity.set_{{js:this.name;/}}($("#{{js:this.name;/}}Input").val());{{/BasicPropertyPanelItem}}
                            }
                            whenReady(function () {
                                get{{js:this.getDomain().name;/}}Admin().getEntityByID("{{js:this.getDomain().name;/}}", "{{js:this.getParent_PageView().getParent_Entity().name;/}}", $active.oid, function (entity) {
                                    {{js:this.getDomain().name;/}}_{{js:this.getParent_PageView().getParent_Entity().name;/}}_entity2{{js:this.name;/}}(entity);
                                });
                            });
                            onSave (function () {
                                if ($active.mode === "edit") {
                                    get{{js:this.getDomain().name;/}}Admin().getEntityByID("{{js:this.getDomain().name;/}}", "{{js:this.getParent_PageView().getParent_Entity().name;/}}", $active.oid, function (entity) {
                                       {{js:this.getDomain().name;/}}_{{js:this.getParent_PageView().getParent_Entity().name;/}}_{{js:this.name;/}}2entity (entity);
                                    });
                                }
                                else {
                                    var newEntity = get{{js:this.getDomain().name;/}}Admin().addNew_{{js:this.getParent_PageView().getParent_Entity().name;/}} ($active.parentID, $active.relnID, $active.relnName);
                                    {{js:this.getDomain().name;/}}_{{js:this.getParent_PageView().getParent_Entity().name;/}}_{{js:this.name;/}}2entity (newEntity);
                                }
                            });
                        </script>
                    {{/BasicPropertyPanelItem?}}
                    {{EnumPanelItem?}}
                        <hr>
                        <form class="form-horizontal">
                            {{EnumPanelItem*}}
                                <div class="form-group">
                                    <label for="{{js:this.name;/}}Selection" class="col-sm-2 control-label">{{js:this.name;/}}</label>
                                    <div class="col-sm-10">
                                        <select class="form-control" id="{{js:this.name;/}}Selection">
                                            {{js: (function () {
                                                res='';
                                                for (var i in this.getEnumeration().literals)
                                                    res += '<option>'+this.getEnumeration().literals[i]+'</option>';
                                                return res;
                                            }).call(this); /}}
                                        </select>
                                    </div>
                                </div>
                            {{/EnumPanelItem}}
                        </form>
                    {{/EnumPanelItem?}}
                    {{AssociationPanelItem?}}
                        <hr>
                        <form class="form-horizontal">
                            {{AssociationPanelItem*}}
                                {{> app{{js:this.getRelationship().getTargetEntity().name;/}}_SelectionModal }}
                                <div class="form-group">
                                    <label for="csv_{{js:this.name;/}}" class="col-sm-2 control-label">{{js:this.name;/}}
                                    </label>
                                    <div class="col-sm-10">
                                        <ul class="nav nav-pills" id="csv_{{js:this.name;/}}"></ul>
                                    </div>
                                </div>
                                <script>
                                    whenReady(function () {
                                        // Update CSV list for current AssociationPanelItem
                                        {{js:this.name;/}}_updateCSVs ();
                                    });
                                    function {{js:this.name;/}}_updateCSVs () {
                                        // Update list with target entities
                                        var reln = $active.entity.{{js:this.getRelationship().name;/}};
                                        $("#csv_{{js:this.name;/}}").empty();
                                        for (i in $active.entity[reln.name].assocTargets) {
                                            var target = $active.entity[reln.name].assocTargets[i];
                                            var elemID = "{{js:this.name;/}}-CSV:"+target.id;
                                            var elem = $("<li role='presentation' id='"+elemID+"'><a href='#'>"+target.label+"</a></li>");
                                            $("#csv_{{js:this.name;/}}").append(elem);
                                            elem.click(function () {
                                                var id = $(this).attr("id").split(":")[1];
                                                console.log("ID:"+id);
                                                window.location.href = "./../app/{{js:this.getRelationship().getTargetEntity().name;/}}?oid="+id;
                                            });
                                        }

                                        // Add pill with callback to edit target entities
                                        var editPill = $("<li><a href='#'><span class='glyphicon glyphicon-edit'></span></a></li>");
                                        $("#csv_{{js:this.name;/}}").append(editPill);
                                        editPill.on("click", function () {
                                            $active.relationship = $active.entity.{{js:this.getRelationship().name;/}};

                                            // Update model with potential targets
                                            $active.entity.getPotentialTargets4{{js:this.getRelationship().name;/}}(
                                                {{js:this.getRelationship().getTargetEntity().name;/}}_updateSelectEntityModal);

                                            // Remember the update function so that later we are able to update the CSV list again
                                            $active.relationship.updateCSV = {{js:this.name;/}}_updateCSVs;

                                            // Create EntityTable object to support modal updates:
                                            var widgetID="{{js:this.getRelationship().getTargetEntity().name;/}}";
                                            if (!$active.entityTables[widgetID]) {
                                                var columns = [ {{js: (function () {
                                                        var res="";
                                                        var tableView = this.getRelationship().getTargetEntity().getDefaultTableView();
                                                        if (!tableView) {
                                                            console.log("Warning: No default TableView for "+this.getRelationship().getTargetEntity().name);
                                                            return "";
                                                        }
                                                        for (var idx=0; idx<tableView.tableItems.length; idx++)
                                                            res += (idx===0?"":", ") + "'"+tableView.tableItems[idx].getProperty().name+"'";
                                                        return res;
                                                }).call(this); /}} ]
                                                var newEntityTable = new EntityTable (widgetID, "selectEntityM", columns, $active.relationship);
                                                newEntityTable.updateRelationshipAndWidget = function () {
                                                    $active.entity.getPotentialTargets4{{js:this.getRelationship().name;/}}(
                                                        {{js:this.getRelationship().getTargetEntity().name;/}}_updateSelectEntityModal);
                                                }
                                            }

                                            // And now open the modal window
                                            $("#selectEntityM").modal();
                                        });
                                    }
                                </script>
                            {{/AssociationPanelItem}}
                        </form>
                    {{/AssociationPanelItem?}}
                    {{AggregationPanelItem*}}
                        <!-- Include Default Table View here: -->
                        {{> app{{js:this.getRelationship().getTargetEntity().name;/}}_DefaultTableView }}
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                                Add <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" id="TV{{js:this.id/}}"></ul>
                        </div>
                        <script>
                            whenReady(function () {
                                get{{js:this.getDomain().name;/}}Admin().getEntityByID("{{js:this.getDomain().name;/}}", "{{js:this.getParent_Panel().getParent_PageView().getParent_Entity().name;/}}", $active.oid, function(entity) {
                                        entity.query_{{js:this.getRelationship().name;/}}(
                                            {{js:this.getRelationship().getTargetEntity().name;/}}_updateDefaultTableView);
                                });
                                $("#TV{{js:this.id/}}").append("<li><a href='./{{js: this.getRelationship().getTargetEntity().name; /}}?parentID="+$active.oid+"&relnID={{js:this.id;/}}&relnName={{js:this.name;/}}'>Add {{js: this.getRelationship().getTargetEntity().name; /}}</a></li>");
                                {{js: (function () {
                                    var derivedEntities = this.getRelationship().getTargetEntity().getAllDerivedEntities();
                                    var res = "";
                                    for (i in derivedEntities) {
                                        var derivedEntity = derivedEntities[i];
                                        res += "$(\"#TV"+this.id+"\").append(\"<li><a href='"+derivedEntity.name+"?parentID=\"+$active.oid+\"&relnID="+this.id+"&relnName="+this.name+"'>Add "+derivedEntity.name+"</a></li>\");";
                                    }
                                    return res;
                                }).call(this); /}}
                            });
                        </script>
                    {{/AggregationPanelItem}}
                </div>
            </div>
            {{/Panel}}
        </div>
    </div>
</div>
{{/PageView}}

{{TableView*}}{{Options}} {"saveAs": ["appViews", "'app'+this.getParent_Entity().name+'_'+this.name+'.hbs'"] } {{/Options}}
<div class="table-container">
    <table class="table table-hover" id="{{js:this.name;/}}Table">
        <thead>
            <tr>
                {{TableItem*}}
                    <th>{{js:this.getProperty().name;/}}</th>
                {{/TableItem}}
                <th> </th>
            </tr>
        </thead>
        <tbody id="{{js:this.getParent_Entity().name;/}}-{{js:this.name;/}}">
        <tbody>
    </table>
</div>
<script>
    {{js:this.getParent_Entity().name;/}}_updateDefaultTableView = function (relationship) {
            var queryResult = relationship.queryResults;
            queryResult.forEach (function (elem) {
                var TDs= {{TableItem*}}"<td>"+elem.get_{{js:this.getProperty().name;/}}()+"</td>"+{{/TableItem}}"";
                $("#{{js:this.getParent_Entity().name;/}}-{{js:this.name;/}}").append("<tr class='{{js:this.getParent_Entity().name;/}}-{{js:this.name;/}}-row' id='"+elem.id+"'>"+TDs+"<td><span class='glyphicon glyphicon-forward'></span></td></tr>");
            });

            $(".{{js:this.getParent_Entity().name;/}}-{{js:this.name;/}}-row").click(function () {
                window.location.href = "./../app/{{js:this.getParent_Entity().name;/}}?oid="+$(this).attr('id');
            });
        }
</script>
{{/TableView}}

{{TableView*}}{{Options}} {"saveAs": ["appViews", "'app'+this.getParent_Entity().name+'_SelectionModal.hbs'"] } {{/Options}}
<script>
    {{js:this.getParent_Entity().name;/}}_removeEntityFromSelectionList = function (relationship) {
        console.log("Remove");
        var id = $(this).attr('id').split(":")[1];
        $active.entity[$active.relationship.name].removeFromAssocTargets(id);
        $(this).remove();
        $active.entity.changed=true;
    }

    //
    // Class "EntityTable"
    //

    function EntityTable (id, prefix, columns, relationship) {
        this.id=id;
        this.table=prefix+"_table";
        this.tableBody=prefix+"_tableBody";
        this.searchInput=prefix+"_searchInput";
        this.searchButton=prefix+"_searchButton";
        this.searchOptions=prefix+"_searchOptions";
        this.pagination=prefix+"_pagination";
        this.columns=columns;
        this.relationship=relationship;

        // Make this available via $active
        if ($active.entityTables[id])
            console.log("Warning: Registering EntityTable with ID "+id+" twice!");
        $active.entityTables[id]=this;
    }

    EntityTable.prototype.updateTable=function () {
        // Update table with entities from query result:
        $("#"+this.table).empty();
        var table = "<thead><tr><th></th>";
        for (var i in this.columns) {
            var col=this.columns[i];
            table += "<th>"+col+"</th>";
        }
        table += "</thead><tbody id="+this.tableBody+"></tbody>";
        $("#"+this.table).html(table);

        for (var i in this.relationship.queryResults) {
            var elem = this.relationship.queryResults[i];
            var TDs = "";
            for (var i in this.columns) {
                var val=elem["get_"+this.columns[i]]();
                TDs += "<td>"+getShortLabel(val)+"</td>";
            }
            var add= "<a href='#'><span class='glyphicon glyphicon-plus'></span></a>";
            var id = this.table+"-TD:"+elem.id;
            $("#"+this.tableBody).append(
                "<tr class='"+this.table+"-row' id='"+id+"' style='cursor:pointer'>"+
                "<td>"+add+"</td>"+TDs+"</tr>");
        }
        // Fill table with empty rows, if needed
        var gap = this.relationship.entitiesPerPage - this.relationship.queryResults.length;
        for (var idx=0; idx<gap; idx++) {
            // Fill last page with empty rows
            var TDs = "";
            for (i in this.columns)
                TDs += "<td> </td>";
            $("#"+this.tableBody).append(
                "<tr><td><font color='white'>/</font></td>"+TDs+"</tr>");
        }

        // Search options
        var searchOptions = "";
        for (i in this.columns) {
            searchOptions += "<li><a href='#' class='"+this.table+"_csearch'>"+this.columns[i]+"</a></li>";
        }
        $("#"+this.searchOptions).empty();
        $("#"+this.searchOptions).data("widgetid", this.id);
        $("#"+this.searchOptions).append(searchOptions);
        $("."+this.table+"_csearch").on("click", function () {
            var searchStr = $(this).text();
            var w = $(this).parent().parent().data("widgetid");
            w = $active.entityTables[w];
            $("#"+w.searchInput).val(searchStr+"=");
            $("#"+w.searchInput).focus();
        });
        $("#"+this.searchInput).data("widgetid", this.id);
        $("#"+this.searchInput).keypress(function(e) {
            if(e.which == 13) {
                e.preventDefault();
                var widgetID=$(this).data("widgetid");
                var entityTable=$active.entityTables[widgetID];
                entityTable.updateSearchResults();
            }
        });
        $("#"+this.searchButton).data("widgetid", this.id);
        $("#"+this.searchButton).on("click", function() {
            var widgetID=$(this).data("widgetid");
            var entityTable=$active.entityTables[widgetID];
            entityTable.updateSearchResults();
        });

        // Pagination
        var totalPages = Math.ceil(this.relationship.queryResultsCount / this.relationship.entitiesPerPage);
        $("#"+this.pagination).empty();
        for (var cnt=0; cnt<totalPages; cnt++) {
            // Add "..." if too many results
            if (cnt===this.relationship.maxNumberOfPages) {
                var pageIcon = $("<li><a href='#' title='Too many search results: found "+this.relationship.queryResultsCount+" matching elements. Please refine search query!'>...</a></li>");
                $("#"+this.pagination).append (pageIcon);
                break;
            }
            // Add numbered pagination elements
            var cls = cnt===$active.relationship.currentPage ? "class='active'" : "";
            var pageIcon = $("<li "+cls+" id='"+this.table+"_page'><a href='#'>"+cnt+"</a></li>");
            pageIcon.data("widgetid", this.id);
            pageIcon.data("page", cnt);
            $("#"+this.pagination).append (pageIcon);
            pageIcon.on("click", function () {
                var page = $(this).data("page");
                var id = $(this).data("widgetid");
                var entityTable = $active.entityTables[id];
                entityTable.relationship.currentPage = page;
                entityTable.updateRelationshipAndWidget();
            });
        }
    }

    EntityTable.prototype.updateSearchResults=function () {
        this.relationship.setFilter($("#"+this.searchInput).val());
        this.updateRelationshipAndWidget();
    }

    // Update model for entity selection (create target list, paging, search, etc.)
    {{js:this.getParent_Entity().name;/}}_updateSelectEntityModal = function (relationship) {
        // Set title
        $("#selectEntityM_titleH").html("Select {{js:this.getParent_Entity().name;/}}");

        // Update table with potential targets
        var widgetID="{{js:this.getParent_Entity().name;/}}";
        $active.entityTables[widgetID].updateTable();

        // Update list of  selected targets:
        $("#selectEntityM_selectionUL").empty();
        for (i in $active.relationship.assocTargets) {
            var target = $active.relationship.assocTargets[i];
            var elemID = "{{js:this.getParent_Entity().name;/}}-{{js:this.name;/}}-Delete:"+target.id;
            var label = getShortLabel(target.label);
            var elem =
                $("<li role='presentation' id='"+elemID+"'><a href='#'>"+
                label+" <span class='glyphicon glyphicon-remove'></span></a></li>");
            $("#selectEntityM_selectionUL").append(elem);
            elem.click({{js:this.getParent_Entity().name;/}}_removeEntityFromSelectionList);
        }
        $("#selectEntityM_count").html("Result: "+$active.relationship.queryResultsCount);

        // Callbacks for pills representing selected entities
        $("."+$active.entityTables[widgetID].table+"-row").click(function () {
            var id = $(this).attr('id').split(":")[1];
            var target = get{{js:this.getParent_Entity().getParent_Domain().name;/}}Admin().findOrAddToEntityCache(id, "{{js:this.getParent_Entity().name;/}}");
            var label = target.getShorthand();
            // Add to nav pills:
            var elemID = "{{js:this.getParent_Entity().name;/}}-{{js:this.name;/}}-Delete:"+id;
            var elem = $("<li role='presentation' id='"+elemID+"'><a href='#'>"+label+" <span class='glyphicon glyphicon-remove'></span></a></li>");
            $("#selectEntityM_selectionUL").append(elem);
            elem.click({{js:this.getParent_Entity().name;/}}_removeEntityFromSelectionList);
            // Also add to active Association targets:
            $active.entity[$active.relationship.name].assocTargets.push({ "id":id, "label":label });
            $active.entity.changed=true;
        });

        // Callback to close Modal
        $("#selectEntityM_selectB").on("click", function () {
            get{{js:this.getDomain().name;/}}Admin().save("{{js:this.getDomain().name;/}}");
            $active.relationship.updateCSV();
        });
    }
</script>
{{/TableView}}

{{/Entity}}
{{/Domain}}
